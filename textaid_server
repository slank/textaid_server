#!/usr/bin/env python

import sys
import os
from SocketServer import ForkingMixIn
from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler
from tempfile import mkstemp
import subprocess
import shlex

IPADDR = '127.0.0.1'
PORT = 6680
COMMAND = '''gvim --nofork'''

class ForkingHTTPServer(ForkingMixIn, HTTPServer):
    pass

class TextHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = self.headers.getheader('content-length')
        if content_length:
            content_length = int(content_length)
        else:
            self.send_error(500,'Missing Content-length header')
        f, tmppath = mkstemp()
        tmpfile = os.fdopen(f,'w')
        tmpfile.write(self.rfile.read(content_length))
        tmpfile.close()
        cmd = shlex.split(COMMAND)
        cmd.append(tmppath)
        result = subprocess.call(cmd)
        with open(tmppath,'r') as tmpfile:
            content = tmpfile.read()
        if len(content) < 2:
            self.send_error(500,'New file was too short')
        elif result == 0:
            self.send_response(200)
            self.send_header("Content-type","text/plain")
            self.end_headers()
            self.wfile.write(content)
        else:
            self.send_error(500)
        os.unlink(tmppath)

def main():
    server_address = (IPADDR, PORT)
    httpd = ForkingHTTPServer(server_address, TextHandler)
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        return 0

if __name__ == '__main__':
    sys.exit(main())
